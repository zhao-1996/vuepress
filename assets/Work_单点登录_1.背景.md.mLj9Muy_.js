import{_ as e,c as a,o,a3 as r}from"./chunks/framework.aC9gkKXW.js";const p=JSON.parse('{"title":"背景","description":"","frontmatter":{},"headers":[],"relativePath":"Work/单点登录/1.背景.md","filePath":"Work/单点登录/1.背景.md","lastUpdated":1650617278000}'),d={name:"Work/单点登录/1.背景.md"},t=r('<h1 id="背景" tabindex="-1">背景 <a class="header-anchor" href="#背景" aria-label="Permalink to &quot;背景&quot;">​</a></h1><h4 id="为什么需要单点登录" tabindex="-1">为什么需要单点登录 <a class="header-anchor" href="#为什么需要单点登录" aria-label="Permalink to &quot;为什么需要单点登录&quot;">​</a></h4><p><code>首先，随着企业的发展，公司中有越来越多样的办公类软件系统，企业 IT 人员面临十分沉重的压力，他们一方面要在混合 IT 环境下管理数量众多的应用系统，另一方面还要为用户提供良好的使用体验。</code><br><code>随着应用系统数目的不断增多，其所带来的威胁也与日俱增。企业为员工在不断变化的环境中进行办公提供便利虽然有助于提升员工工作效率，但是也引发了新的安全隐患，即访问权限管理。</code><br><code>正常来说，每套系统都有单独的账号密码，这就意味着密码的存在意味着安全挑战，企业无法要求每个员工为每个应用系统都设置独立的用户名和密码，这是一个十分不可行的确保应用系统安全的解决方案。</code><br><code>随着公司的发展，公司内部使用的系统越来越多。但是对于使用系统的员工来说不是个好事情。</code><br><code>每个系统都需要记住对应的账号和密码，很多员工都是每个系统的账户和密码都一样的。</code><br><code>如果同时要使用CRM系统、WMS系统、OA系统，用户需要登录三次，如果10个系统需要登录分别登录十次，非常繁琐。</code><br><code>如果不使用了，还需要分别在三个系统中依次的注销。</code><br></p><h4 id="需求" tabindex="-1">需求 <a class="header-anchor" href="#需求" aria-label="Permalink to &quot;需求&quot;">​</a></h4><p><code>后台用户通过SSO系统实现统一登录，并在SSO系统中点击其他系统并跳转到该系统，无需再次登录</code><br><code>后台用户未在SSO系统登录时，其他系统无权访问，需统一跳转至SSO系统登录界面。</code><br><code>同步退出机制，即不管在SSO系统中退出，还是在其他系统中退出，实现统一退出，即单点注销。</code><br></p><h4 id="什么是单点登录" tabindex="-1">什么是单点登录 <a class="header-anchor" href="#什么是单点登录" aria-label="Permalink to &quot;什么是单点登录&quot;">​</a></h4><p><code>​ SSO英文全称Single Sign On，单点登录。SSO是在多个应用系统中，用户只需要登录一次就可以访问所有相互信任的应用系统。它包括可以将这次主要的登录映射到其他应用中用于同一个用户的登录的机制。</code></p><h4 id="单一退出" tabindex="-1">单一退出 <a class="header-anchor" href="#单一退出" aria-label="Permalink to &quot;单一退出&quot;">​</a></h4><p><code>相同的，单一退出（single sign-off）就是指，只需要单一的退出动作，就可以结束对于多个系统的访问权限。</code></p>',9),c=[t];function n(i,s,l,h,_,S){return o(),a("div",null,c)}const f=e(d,[["render",n]]);export{p as __pageData,f as default};
