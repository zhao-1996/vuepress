import{_ as e,c as t,o as a,a3 as r}from"./chunks/framework.BvVpiGod.js";const v=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"vue/README.md","filePath":"vue/README.md","lastUpdated":1717037199000}'),o={name:"vue/README.md"},c=r('<h3 id="前端框架的定位" tabindex="-1">前端框架的定位 <a class="header-anchor" href="#前端框架的定位" aria-label="Permalink to &quot;前端框架的定位&quot;">​</a></h3><blockquote><p>当JavaScript在1996被发布后, 它给网络增加了少许的交互性和乐趣, 直到那时, 网页仍由静态文档组成. 网络应该不仅仅是阅读,更是创造的地方. 随着JavaScript的流行. 使用JavaScript的开发者们创造工具来解决他们遇到的问题, 并且将其打包成称为库的可复用组件, 这样就能和他人共享解决方案. 这种共享库的体系帮助塑造了网络的增长.<br></p></blockquote><blockquote><p>现在, JavaScript是网络的基本部分, used on 95% of all websites, 而且网络又是现代生活的基本部分. 用户在网络上写文章, 管理预算, 听音乐, 看电影, 以及和相隔万里的人通过文字, 音频, 视频聊天来瞬时交流. 网络让我们能够做到那些过去只能在电脑上安 装本地应用程序才能做到的事. 这些现代的, 复杂的, 具有交互性的网站通常被称为 网络应用程序.<br></p></blockquote><blockquote><p>现代JavaScript框架的到来加快了打造高度动态化和交互性强的应用程序的速度. 框架 就是提供该如何构建应用程序的意见的库。<br> 这些意见能使应用具有可预测性和同质性。<br> 可预测性让软件能在扩展到很大规模的同时仍保持可维护性。<br> 可预测性和可维护性对于一个软件的长久健康运行是十分重要的。<br></p></blockquote><p><code>这里不在做理论的描述，主要讲解框架自身资源的用法，属于术的层面的细节的记录，有需要学习理解理论知识的，可自行到官网去阅读。</code><br> vue2官网<a href="https://cn.vuejs.org/v2/api/" target="_blank" rel="noreferrer">请点击</a><br> vue3官网<a href="https://v3.cn.vuejs.org/" target="_blank" rel="noreferrer">请点击</a><br></p>',5),s=[c];function _(n,p,l,i,d,u){return a(),t("div",null,s)}const h=e(o,[["render",_]]);export{v as __pageData,h as default};
