import{_ as e,c as a,o,a3 as t}from"./chunks/framework.BvVpiGod.js";const m=JSON.parse('{"title":"生命周期钩子","description":"","frontmatter":{},"headers":[],"relativePath":"vue/vue3/组合式API/3.生命周期钩子.md","filePath":"vue/vue3/组合式API/3.生命周期钩子.md","lastUpdated":1717375889000}'),n={name:"vue/vue3/组合式API/3.生命周期钩子.md"},r=t('<h1 id="生命周期钩子" tabindex="-1">生命周期钩子 <a class="header-anchor" href="#生命周期钩子" aria-label="Permalink to &quot;生命周期钩子&quot;">​</a></h1><h4 id="onmounted" tabindex="-1">onMounted <a class="header-anchor" href="#onmounted" aria-label="Permalink to &quot;onMounted&quot;">​</a></h4><p>注册一个回调函数，在组件挂载完成后执行。</p><h4 id="onupdated" tabindex="-1">onUpdated() <a class="header-anchor" href="#onupdated" aria-label="Permalink to &quot;onUpdated()&quot;">​</a></h4><p>注册一个回调函数，在组件因为响应式状态变更而更新其 DOM 树之后调用。</p><h4 id="onunmounted" tabindex="-1">onUnmounted() <a class="header-anchor" href="#onunmounted" aria-label="Permalink to &quot;onUnmounted()&quot;">​</a></h4><p>注册一个回调函数，在组件实例被卸载之后调用。</p><h4 id="onbeforemount" tabindex="-1">onBeforeMount() <a class="header-anchor" href="#onbeforemount" aria-label="Permalink to &quot;onBeforeMount()&quot;">​</a></h4><p>注册一个钩子，在组件被挂载之前被调用。</p><h4 id="onbeforeupdate-注册一个钩子-在组件被挂载之前被调用。" tabindex="-1">onBeforeUpdate 注册一个钩子，在组件被挂载之前被调用。 <a class="header-anchor" href="#onbeforeupdate-注册一个钩子-在组件被挂载之前被调用。" aria-label="Permalink to &quot;onBeforeUpdate 注册一个钩子，在组件被挂载之前被调用。&quot;">​</a></h4><p>注册一个钩子，在组件即将因为响应式状态变更而更新其 DOM 树之前调用。</p><h4 id="onbeforeunmount" tabindex="-1">onBeforeUnmount() <a class="header-anchor" href="#onbeforeunmount" aria-label="Permalink to &quot;onBeforeUnmount()&quot;">​</a></h4><p>注册一个钩子，在组件实例被卸载之前调用。</p><h4 id="onerrorcaptured" tabindex="-1">onErrorCaptured() <a class="header-anchor" href="#onerrorcaptured" aria-label="Permalink to &quot;onErrorCaptured()&quot;">​</a></h4><p>注册一个钩子，在捕获了后代组件传递的错误时调用。</p><h4 id="onactivated" tabindex="-1">onActivated() <a class="header-anchor" href="#onactivated" aria-label="Permalink to &quot;onActivated()&quot;">​</a></h4><p>注册一个回调函数，若组件实例是 <code>&lt;KeepAlive&gt;</code> 缓存树的一部分，当组件被插入到 DOM 中时调用。</p><h4 id="ondeactivated" tabindex="-1">onDeactivated() <a class="header-anchor" href="#ondeactivated" aria-label="Permalink to &quot;onDeactivated()&quot;">​</a></h4><p>注册一个回调函数，若组件实例是<code>&lt;KeepAlive&gt;</code>缓存树的一部分，当组件从 DOM 中被移除时调用。</p>',19),d=[r];function i(u,h,l,c,p,s){return o(),a("div",null,d)}const f=e(n,[["render",i]]);export{m as __pageData,f as default};
