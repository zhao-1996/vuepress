import{_ as t,c as a,o as e,a3 as o}from"./chunks/framework.aC9gkKXW.js";const p=JSON.parse('{"title":"拉取版本回退","description":"","frontmatter":{},"headers":[],"relativePath":"tool/git/7.拉取版本回退.md","filePath":"tool/git/7.拉取版本回退.md","lastUpdated":1636361708000}'),r={name:"tool/git/7.拉取版本回退.md"},i=o('<h1 id="拉取版本回退" tabindex="-1">拉取版本回退 <a class="header-anchor" href="#拉取版本回退" aria-label="Permalink to &quot;拉取版本回退&quot;">​</a></h1><h3 id="查看历史变更记录" tabindex="-1">查看历史变更记录 <a class="header-anchor" href="#查看历史变更记录" aria-label="Permalink to &quot;查看历史变更记录&quot;">​</a></h3><p><code>git reflog</code></p><h3 id="回退至指定版本" tabindex="-1">回退至指定版本 <a class="header-anchor" href="#回退至指定版本" aria-label="Permalink to &quot;回退至指定版本&quot;">​</a></h3><p><code>git reset --hard id</code> 回退到指定版本 <br> 此时回退成功<br><code>git fetch origin</code><br><code>git merge origin/master</code><br> 或者<br><code>git pull master:本地分支</code><br></p><h3 id="注意" tabindex="-1">!注意： <a class="header-anchor" href="#注意" aria-label="Permalink to &quot;!注意：&quot;">​</a></h3><p>当你回退版本，你本地有修改未提交时，无法回退<br> 当你回退版本，你本地修改已经提交，没有推送到<br> 远程仓库,回退后会被回退到的版本覆盖</p><h3 id="git-stash" tabindex="-1">git stash <a class="header-anchor" href="#git-stash" aria-label="Permalink to &quot;git stash&quot;">​</a></h3><p>备份当前工作区的内容到git栈区<br><code>git stash</code><br> 从git栈中获取到最近一次stash进去的内容，恢复工作区的内容。<br><code>git stash pop</code><br> 获取之后,由于可能会stash多次，git使用栈管理，我们可以使用<br><code>git stash list 查看所有的stash</code><br><code>git stash clear 清空git栈</code><br></p><p><strong>使用--hard版本回退时，如果工作内容发生了变化一定要先保存工作内容，可以将工作内容复制出来或将工作内容备份到git栈。因为--hard版本回退时，直接会改变本地源码，不保存会造成永久丢失。</strong></p>',10),s=[i];function d(c,h,l,n,_,g){return e(),a("div",null,s)}const m=t(r,[["render",d]]);export{p as __pageData,m as default};
