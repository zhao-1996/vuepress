import{_ as t,c as s,o,j as e,a}from"./chunks/framework.BvVpiGod.js";const r="/vuepress/assets/wenjian1.FTEWtY19.webp",B=JSON.parse('{"title":"文件完整性","description":"","frontmatter":{},"headers":[],"relativePath":"tool/依赖管理/6.文件完整性.md","filePath":"tool/依赖管理/6.文件完整性.md","lastUpdated":1716962640000}'),n={name:"tool/依赖管理/6.文件完整性.md"},_=e("h1",{id:"文件完整性",tabindex:"-1"},[a("文件完整性 "),e("a",{class:"header-anchor",href:"#文件完整性","aria-label":'Permalink to "文件完整性"'},"​")],-1),c=e("p",null,[a("在下载依赖包之前，我们一般就能拿到 npm 对该依赖包计算的 hash 值，例如我们执行 npm info 命令，紧跟 tarball(下载链接) 的就是 shasum(hash) ：<"),e("br"),e("img",{src:r,alt:"RUNOOB 图标"}),e("br"),a(" 用户下载依赖包到本地后，需要确定在下载过程中没有出现错误，所以在下载完成之后需要在本地在计算一次文件的 hash 值，如果两个 hash 值是相同的，则确保下载的依赖是完整的，如果不同，则进行重新下载。")],-1),h=e("p",null,[a("计算hash"),e("br"),a(" 安装"),e("br"),a(" npm i hash-sum -S"),e("br"),a(" 与项目依赖包哈希表进行对比"),e("br")],-1),l=[_,c,h];function i(d,p,m,b,f,u){return o(),s("div",null,l)}const N=t(n,[["render",i]]);export{B as __pageData,N as default};
