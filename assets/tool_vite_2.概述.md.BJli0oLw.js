import{_ as a,c as s,o as i,a3 as e}from"./chunks/framework.BvVpiGod.js";const _=JSON.parse('{"title":"vite","description":"","frontmatter":{},"headers":[],"relativePath":"tool/vite/2.概述.md","filePath":"tool/vite/2.概述.md","lastUpdated":1716973501000}'),t={name:"tool/vite/2.概述.md"},n=e(`<h1 id="vite" tabindex="-1">vite <a class="header-anchor" href="#vite" aria-label="Permalink to &quot;vite&quot;">​</a></h1><h3 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h3><p>Vite（法语单词“ fast”，发音为/ vit /）是一种构建工具，旨在为现代 Web 项目提供更快，更精简的开发体验。 它包括两个主要部分： 一个开发服务器，它在本机 ES 模块上提供了丰富的功能增强，例如，极快的热模块更换（HMR）。 一个构建命令，它将您的代码与 Rollup 捆绑在一起，并已预先配置为输出高度优化的静态资产进行生产。</p><h3 id="浏览器支持" tabindex="-1">浏览器支持 <a class="header-anchor" href="#浏览器支持" aria-label="Permalink to &quot;浏览器支持&quot;">​</a></h3><p>Vite 默认只支持原生支持 ESM 的现代浏览器，但可以通过官方的 @vitejs/plugin-legacy 来支持旧浏览器。 legacy 插件会自动额外生成一个针对旧浏览器的包，并且在 html 中插入根据浏览器 ESM 支持来选择性加载对应包的代码（类似 vue-cli 的 modern mode）。</p><h3 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h3><p><code>node.js：必须12或者12以上</code></p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">1.安装vite</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> yarn create vite or npm init vite@latest</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">2.使用vite创建项目</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">npm init @vitejs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app MyApp</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">yarn create @vitejs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app MyApp</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">3.安装依赖</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">yarn or npm install</span></span></code></pre></div>`,8),l=[n];function p(h,r,o,c,d,k){return i(),s("div",null,l)}const v=a(t,[["render",p]]);export{_ as __pageData,v as default};
